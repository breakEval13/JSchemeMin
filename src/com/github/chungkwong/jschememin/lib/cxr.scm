(define-library (scheme cxr)
  (import (scheme base))
  (export caaaar caaadr caaar caadar caaddr caadr cadaar cadadr cadar caddar cadddr caddr cdaaar
          cdaadr cdaar cdadar cdaddr cdadr cddaar cddadr cddar cdddar cddddr cdddr)
  (begin
    (define caaaar (lambda (x) (car (car (car (car x))))))
    (define caaar (lambda (x) (car (car (car x)))))
    (define caaddr (lambda (x) (car (car (cdr (cdr x))))))
    (define cadaar (lambda (x) (car (cdr (car (car x))))))
    (define cadar (lambda (x) (car (cdr (car x)))))
    (define cadddr (lambda (x) (car (cdr (cdr (cdr x))))))
    (define cdaaar (lambda (x) (cdr (car (car (car x))))))
    (define cdaar (lambda (x) (cdr (car (car x)))))
    (define cdaddr (lambda (x) (cdr (car (cdr (cdr x))))))
    (define cddaar (lambda (x) (cdr (cdr (car (car x))))))
    (define cddar (lambda (x) (cdr (cdr (car x)))))
    (define cddddr (lambda (x) (cdr (cdr (cdr (cdr x))))))
    (define caaadr (lambda (x) (car (car (car (cdr x))))))
    (define caadar (lambda (x) (car (car (cdr (car x))))))
    (define caadr (lambda (x) (car (car (cdr x)))))
    (define cadadr (lambda (x) (car (cdr (car (cdr x))))))
    (define caddar (lambda (x) (car (cdr (cdr (car x))))))
    (define caddr (lambda (x) (car (cdr (cdr x)))))
    (define cdaadr (lambda (x) (cdr (car (car (cdr x))))))
    (define cdadar (lambda (x) (cdr (car (cdr (car x))))))
    (define cdadr (lambda (x) (cdr (car (cdr x)))))
    (define cddadr (lambda (x) (cdr (cdr (car (cdr x))))))
    (define cdddar (lambda (x) (cdr (cdr (cdr (car x))))))
    (define cdddr (lambda (x) (cdr (cdr (cdr x)))))))