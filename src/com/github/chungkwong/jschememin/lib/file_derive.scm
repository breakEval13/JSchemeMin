(import (scheme base))

(define (call-with-input-file file proc)
  (call-with-port (open-input-file file) proc))
(define (call-with-output-file file proc)
  (call-with-port (open-output-file file) proc))

(define (with-input-from-file file thunk)
  (let ((port (open-input-file file))
        (old (current-input-port)))
    (dynamic-wind (lambda () (set! old (current-input-port)) (set-current-input-port! port))
                  (lambda () (let ((ret (thunk))) (close-port port) ret))
                  (lambda () (set-current-input-port! old)))))
(define (with-output-to-file file thunk)
  (let ((port (open-output-file file))
        (old (current-output-port)))
    (dynamic-wind (lambda () (set! old (current-output-port)) (set-current-output-port! port))
                  (lambda () (let ((ret (thunk))) (close-port port) ret))
                  (lambda () (set-current-output-port! old)))))